import tkinter as tk
from tkinter import messagebox

def name_changer_kink_light(name, manufacturer, model, family):
    name_map = {
        'Светильник': 'Светильник',
        'Подвес': 'Подвесной светильник',
        'Подвесной': 'Подвесной светильник',
        'Комплект': 'Подвесной светильник',
        'Струнный': 'Струнный светильник',
        'Настенный': 'Настенный светильник',
        'Настеный': 'Настенный светильник',
        'Настенно-потолочный': 'Настенно-потолочный светильник',
        'Бра': 'Бра',
        'Настольная': 'Настольная лампа',
        'Люстра': 'Люстра',
        'Торшер': 'Торшер',
        'Подсветка': 'Подсветка',
        'Светильник-ночник': 'ночник',
        'Светильник встраиваемый': 'встраиваемый',
        'Светильник диммируемый': 'диммируемый'
    }

    root = tk.Tk()
    root.withdraw()

    found_keywords = []
    for key in name_map:
        if key in name and name_map[key] not in found_keywords:
            found_keywords.append(name_map[key])

    if found_keywords:
        combined_name = ' '.join(found_keywords)
        changed = f'{combined_name} {manufacturer} {model} {family}'
    else:
        messagebox.showerror("Error in changer/name_change/kink_light", f"Incorrect type: {name}")
        changed = None

    root.destroy()
    return changed, combined_name

def name_changer_sonex(type_1, type_2, manufacturer, model, family):
    if manufacturer in ['Сонекс', 'Lumion', 'Odeon Light']:
        name_map = {
            'Бра': 'Бра',
            'Бра раздвижное': 'Бра',
            'Бра с выкл.': 'Бра с выключателем',
            'Встраиваемый грунтовый светильник': 'Уличный светильник',
            'Высокая Лампа': 'Настольная лампа',
            'Ландшафтный настенный светильник': 'Уличный настенный светильник',
            'Ландшафтный подвес': 'Уличный подвес',
            'Ландшафтный потолочный светильник': 'Уличный потолочный светильник',
            'Ландшафтный светильник': 'Уличный светильник',
            'Ландшафтный светильник на базу': 'Уличный светильник на базу',
            'Ландшафтный светильник на столб': 'Уличный светильник на столб',
            'Ландшафтный светильник-подвес': 'Уличный светильник-подвес',
            'Линейный светильник': 'Подвесной светильник',
            'Люстры': 'Люстра',
            'Накладной/подвесной "два в одном"': 'Подвесной/накладной светильник',
            'Напольные': 'Торшер',
            'Настенно-потолочные': 'Настенно-потолочный светильник',
            'Настенные': 'Настенный светильник',
            'Настенный с лучами': 'Настенный светильник',
            'Настенный светильник на кронштейне': 'Настенный светильник',
            'Настенный светильник с выключателем': 'Настенный светильник',
            'Настенный светильник-полка с подсветкой/USB': 'Настенный светильник-полка',
            'Подвес линейный': 'Подвес',
            'Подвесной': 'Подвесной светильник',
            'Подвесные': 'Подвесной светильник',
            'Подсветка для картин с выкл.': 'Подсветка для картин',
            'Потолочные': 'Потолочный светильник',
            'Потолочный накладной светильник': 'Потолочный светильник',
            'Потолочный/подвесной встаиваемый': 'Подвесной/потолочный светильник',
            'Светильник подвесной "паук"': 'Светильник подвесной',
            'Торшер с полкой/USB': 'Торшер с полкой',
            'Уличные (фасадные)': 'Уличный (фасадный) светильник',
            'Уличный настенный светильник IP43': 'Уличный настенный светильник',
            'Уличный настенный светильник IP44': 'Уличный настенный светильник',
            'Уличный светильник 150 см': 'Уличный светильник',
            'Уличный светильник 103 см': 'Уличный светильник',
            'Уличный светильник 124 см': 'Уличный светильник',
            'Уличный светильник 80 см': 'Уличный светильник',
            'Уличный светильник 100 см': 'Уличный светильник',
            'Уличный светильник 110 см': 'Уличный светильник',
            'Фасадный поворотный светильник 360°': 'Фасадный поворотный светильник',
            'Подсветка для лестниц': 'Подсветка для лестницы',
        }

        if type_2 in ['База потолочная', 'Комплектующие']:
            changed = f'{type_1} {manufacturer} {model} {family}'
            return changed, type_1
        elif type_1 in ['Абажур', 'Бра с выключателем', 'Встраиваемый светильник','Драйвер', 'Люстра', 'Люстра каскадная',
                        'Люстра на штанге', 'Люстра подвесная', 'Люстра потолочная', 'Напольный светильник',
                        'Настенно-потолочный светильник', 'Настенный светильник', 'Настольная лампа',
                        'Настольный светильник', 'Подвес', 'Подвес-бусы', 'Подвесная люстра', 'Подвесной светильник',
                        'Подсветка', 'Подсветка для картин', 'Потолочный светильник', 'Фасадный светильник',
                        'Потолочный светильник-вентилятор', 'Светильник подвесной', 'Светильник потолочный',
                        'Светильник с креплением на зеркало', 'Светильник встраиваемый', 'Торшер', 'Торшер со столиком',
                        'Уличный настенный светильник', 'Уличный потолочный светильник', 'Уличный светильник',
                        'Уличный светильник на столб', 'Уличный светильник-подвес']:
            changed = f'{type_1} {manufacturer} {model} {family}'
            return changed, type_1
        elif type_1 in name_map:
            changed = f'{name_map[type_1]} {manufacturer} {model} {family}'
            return changed, name_map[type_1]
        else:
            root = tk.Tk()
            root.withdraw()
            messagebox.showerror("Error in changer/name_change/sonex", f'Incorrect type: {type_1, model}')
            root.destroy()
